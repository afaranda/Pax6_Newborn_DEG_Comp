BiocInstaller::biocLite("GEOQuery")
BiocInstaller::biocLite("GEOquery")
# Setup Environment
wd<-getwd()
wd
geoDir<-'geo_data'
# Import Normalized Expression values from GSE13244
gse<-getGEO(filename='GSE13244_series_matrix.txt.gz', destdir=wd)
library(limma)
library(GEOquery)
library(dplyr)
library(reshape2)
library(biomaRt)
# Import Normalized Expression values from GSE13244
gse<-getGEO(filename='GSE13244_series_matrix.txt.gz', destdir=wd)
# Import Normalized Expression values from GSE13244
gse<-getGEO(filename='GSE13244_series_matrix.txt.gz')#, destdir=wd)
# Import Normalized Expression values from GSE13244
gse<-getGEO(filename='GSE13244_series_matrix.txt.gz', destdir=wd)
problems()
gse
head(exprs(gse))
boxplot(exprs(gse))
boxplot(log2(exprs(gse)))
# Process Expression Data, get DEGList
print(apply(exprs(gse), 2, summary))
gse2<-getGEO(GEO = "GSE13244", GSEMatrix = F, destdir = wd)
filePaths=getGEOSuppFiles("GSE13244", makeDirectory = T)
filePaths
library(affy)
gse<-readAff(filePaths)
gse<-readAffy(filePaths)
gse<-ReadAffy(filePaths)
filePaths
filePaths[[1]]
filePaths[[2]]
filePaths[[3]]
filePaths[[4]]
filePaths[[5]]
filePaths[[6]]
gse<-ReadAffy("/home/adam/Documents/Pax6_Newborn_DEG_Comp/GSE13244/GSE13244_RAW.tar")
setwd('/home/adam/Documents/LEC_Time_Series')
library(dplyr)
library(cluster)
library(reshape2)
wd<-getwd()
source('transcriptomic_analysis_scripts/BuildDataMatrix.R')
source('transcriptomic_analysis_scripts/PreprocessingFunctions.R')
source('transcriptomic_analysis_scripts/PrincipalComponents.R')
source('transcriptomic_analysis_scripts/ClusteringFunctions.R')
dll<-c(
"/home/adam/Documents/LTS_Data/DBI_NoTrim_StringTie",
"/home/adam/Documents/LTS_Data/DNA_Link_NoTrim_StringTie"
)
ftt<-st_getFileTable(dll, wd=".")
stg<-st_loadFiles(ftt, fnCol=4)
bg<-st_sewBallGown(ftt)
stringtie_tran_tpm<-st_buildTranscriptMatrix(ds=stg, idCol = 10, measCol = 14)
stringtie_gene_tpm<-st_buildGeneMatrix(ds=stg, g_idCol=9, measCol = 14)
ls()
list.celfiles()
list.celfiles('GSE13244')
list.files('GSE13244')
getwd()
getwd()
"/home/adam/Documents/Pax6_Newborn_Comp"
setwd("/home/adam/Documents/Pax6_Newborn_Comp")
setwd("/home/adam/Documents/Pax6_Newborn_DEG_Comp")
list.files('GSE13244')
list.celfiles('GSE13244')
gse<-ReadAffy(list.celfiles('GSE13244'))
class(list.celfiles('GSE13244'))
gse<-ReadAffy(filenames=list.celfiles('GSE13244'))
gse<-ReadAffy(filenames=list.celfiles('GSE13244'))
gse<-ReadAffy(filenames=paste("GSE13244", list.celfiles('GSE13244'), sep="/"))
gse
gse
boxplot(exprs(gse))
head(exprs(gse))
head(exprs(gse))
boxplot(exprs(gse))
boxplot(log2(exprs(gse)))
gse2<-rma(gse)
boxplot(log2(exprs(gse2)))
boxplot(exprs(gse2))
# Import Normalized Expression values from GSE13244
gse3<-getGEO(filename='GSE13244_series_matrix.txt.gz', destdir=wd)
boxplot(exprs(gse3))
boxplot(log2(exprs(gse3)))
boxplot(log2(exprs(gse3)))
boxplot(exprs(gse2))
pData(gse3)
nrow(exprs(gse2))
nrow(exprs(gse3))
nrow(exprs(gse))
nrow(exprs(gse3))
nrow(exprs(gse2))
head(exprs(gse2))
names(exprs(gse2))<-gsub(".CEL", "", names(exprs(gse2)))
head(exprs(gse2))
pData(gse2)
x<-merge(exprs(gse2)[,1], gse3[,1])
head(x)
?merge
x<-merge(exprs(gse2)[,1], gse3[,1], by=0)
head(x)
nrow(x)
x<-merge(exprs(gse2)[,1], exprs(gse3)[,1], by=0)
head9x
head(x)
x<-merge(exprs(gse2)[,1], log2(exprs(gse3))[,1], by=0)
head(x)
plot(x$x, x$y)
x<-merge(exprs(gse2)[,2], log2(exprs(gse3))[,2], by=0)
x<-merge(exprs(gse2)[,3], log2(exprs(gse3))[,3], by=0)
plot(x$x, x$y)
x<-merge(exprs(gse2)[,3], log2(exprs(gse3))[,1], by=0)
plot(x$x, x$y)
x<-merge(exprs(gse2)[,3], log2(exprs(gse3))[,4], by=0)
plot(x$x, x$y)
# Import Normalized Expression values from GSE13244
gse<-getGEO(filename='GSE13244_series_matrix.txt.gz', destdir=wd)
# Process Expression Data, get DEGList
print(apply(exprs(gse), 2, summary))
exprs(gse)<-log2(exprs(gse))
# Process Expression Data, get DEGList
print(apply(exprs(gse), 2, summary))
pData(gse)
dm<-model.matrix(~0+characteristics_ch1, pData(gse))
colnames(dm)<-gsub('characteristics_ch1', '', colnames(dm))
dm
cmat<-makeContrasts(`Pax6 heterozygous RNA` - `Pax6 wild-type RNA` , levels=dm)
pData(gse)$characteristics_ch1<-gsub(" ", "_", pData(gse)$characteristics_ch1)
pData(gse)
pData(gse)$characteristics_ch1<-gsub("-", "", pData(gse)$characteristics_ch1)
pData(gse)
dm<-model.matrix(~0+characteristics_ch1, pData(gse))
colnames(dm)<-gsub('characteristics_ch1', '', colnames(dm))
cmat<-makeContrasts(`Pax6_heterozygous_RNA` - `Pax6_wildtype_RNA` , levels=dm)
cmat
fit<-lmFit(gse, dm)
fit<-contrasts.fit(fit, cmat)
fit<-eBayes(fit)
cols<-c(
'ID', 'Gene.Symbol', 'ENTREZ_GENE_ID', 'AveExpr',
'logFC', 'P.Value', 'adj.P.Val'
)
deg<-topTable(fit, n=Inf)[, cols]
print(head(deg))
deg %>% filter(Gene.Symbol == "Pax6")
deg %>% filter(Gene.Symbol == "Cspg2")
deg %>% filter(Gene.Symbol == "Spon1")
deg %>% filter(Gene.Symbol == "Olfm3")
nrow(deg %>% filter(P.Value < 0.0))
nrow(deg %>% filter(P.Value < 0.05))
nrow(deg %>% filter(P.Value < 0.1))
deg %>% filter(Gene.Symbol == "Olfm3")
deg %>% filter(Gene.Symbol == "Olfm3")
pData(gse)
Cor<-pData(gse)[pData(gse)$source_name_ch1 == 'Pax6_wildtype_RNA', 'geo_accession']
Cnj<-pData(gse)[pData(gse)$source_name_ch1 == 'Pax6_heterozygous_RNA', 'geo_accession']
Gr1<-pData(gse)[pData(gse)$source_name_ch1 == 'Pax6_wildtype_RNA', 'geo_accession']
Gr2<-pData(gse)[pData(gse)$source_name_ch1 == 'Pax6_heterozygous_RNA', 'geo_accession']
ex<-as.data.frame(exprs(gse))
ex$ID<-row.names(ex)
ex<-melt(ex, id.vars='ID')
gr.avg<-as.data.frame(
inner_join(
ex %>%
filter(variable %in% Gr1) %>%
group_by(ID) %>%
summarize(Pax6_wildtype_Mean=mean(value)),
ex %>%
filter(variable %in% Cnj) %>%
group_by(ID) %>%
summarize(Pax6_Heterozygous_Mean=mean(value)),
by='ID'
)
)
deg<-as.data.frame(inner_join(deg, gr.avg,by='ID'))
head(deg)
deg<-topTable(fit, n=Inf)[, cols]
print(head(deg))
# Join Group Averages on the degList
Gr1<-pData(gse)[pData(gse)$source_name_ch1 == 'Pax6_wildtype_RNA', 'geo_accession']
Gr2<-pData(gse)[pData(gse)$source_name_ch1 == 'Pax6_heterozygous_RNA', 'geo_accession']
ex<-as.data.frame(exprs(gse))
ex$ID<-row.names(ex)
ex<-melt(ex, id.vars='ID')
gr.avg<-as.data.frame(
inner_join(
ex %>%
filter(variable %in% Gr1) %>%
group_by(ID) %>%
summarize(Pax6_wildtype_Mean=mean(value)),
ex %>%
filter(variable %in% Gr2) %>%
group_by(ID) %>%
summarize(Pax6_Heterozygous_Mean=mean(value)),
by='ID'
)
)
deg<-as.data.frame(inner_join(deg, gr.avg,by='ID'))
head(deg)
deg<-topTable(fit, n=Inf)[, cols]
head(deg)
# Join Group Averages on the degList
Gr1<-pData(gse)[pData(gse)$source_name_ch1 == 'Pax6_wildtype_RNA', 'geo_accession']
Gr2<-pData(gse)[pData(gse)$source_name_ch1 == 'Pax6_heterozygous_RNA', 'geo_accession']
gr.avg<-as.data.frame(
inner_join(
ex %>%
filter(variable %in% Gr1) %>%
group_by(ID) %>%
summarize(Pax6_wildtype_Mean=mean(value)),
ex %>%
filter(variable %in% Gr2) %>%
group_by(ID) %>%
summarize(Pax6_Heterozygous_Mean=mean(value)),
by='ID'
)
)
gr.avg
ex<-as.data.frame(exprs(gse))
head(ex)
ex$ID<-row.names(ex)
head(ex)
ex<-melt(ex, id.vars='ID')
head(ex)
Gr1
# Join Group Averages on the degList
Gr1<-pData(gse)[pData(gse)$characteristics_ch1 == 'Pax6_wildtype_RNA', 'geo_accession']
Gr2<-pData(gse)[pData(gse)$characteristics_ch1 == 'Pax6_heterozygous_RNA', 'geo_accession']
gr.avg<-as.data.frame(
inner_join(
ex %>%
filter(variable %in% Gr1) %>%
group_by(ID) %>%
summarize(Pax6_wildtype_Mean=mean(value)),
ex %>%
filter(variable %in% Gr2) %>%
group_by(ID) %>%
summarize(Pax6_Heterozygous_Mean=mean(value)),
by='ID'
)
)
deg<-as.data.frame(inner_join(deg, gr.avg,by='ID'))
head(deg)
# Drop Probes with ambiguos annotations (more than one gene)
deg <- deg %>% filter(!grepl('///', Gene.Symbol))
nrow(deg %>% filter(P.Value < 0.05))
# Choose a representative Probe for each gene
x<-c(1,1,2,0.5, -0.3, 1)
deg %>% group_by(Gene.Symbol) %>% mutate(pos = sum(logFC > 0), neg = sum(logFC < 0))
deg %>%  arrange(Gene.Symbol) %>% group_by(Gene.Symbol) %>% mutate(pos = sum(logFC > 0), neg = sum(logFC < 0))
deg<-deg %>%  arrange(Gene.Symbol)
deg %>% group_by(Gene.Symbol) %>% mutate(pos = sum(logFC > 0), neg = sum(logFC < 0))
deg<-deg %>%  arrange(Gene.Symbol) %>% filter(Gene.symbol !="")
deg<-deg %>%  arrange(Gene.Symbol) %>% filter(Gene.Symbol !="")
deg %>% group_by(Gene.Symbol) %>% mutate(pos = sum(logFC > 0), neg = sum(logFC < 0))
library(data.table)
install.packages(data.table)
install.packages("data.table")
install.packages("data.table")
deg %>% group_by(Gene.Symbol) %>% mutate(pos = sum(logFC > 0), neg = sum(logFC < 0))
rm(bg)
install.packages("data.table")
wd<-getwd()
library(limma)
library(GEOquery)
library(dplyr)
library(reshape2)
library(biomaRt)
# Import Normalized Expression values from GSE13244, clean up Grouping Column
gse<-getGEO(filename='GSE13244_series_matrix.txt.gz', destdir=wd)
exprs(gse)<-log2(exprs(gse))
pData(gse)$characteristics_ch1<-gsub(" ", "_", pData(gse)$characteristics_ch1)
pData(gse)$characteristics_ch1<-gsub("-", "", pData(gse)$characteristics_ch1)
head(deg)
# Process Expression Data, get DEGList
print(apply(exprs(gse), 2, summary))
dm<-model.matrix(~0+characteristics_ch1, pData(gse))
colnames(dm)<-gsub('characteristics_ch1', '', colnames(dm))
cmat<-makeContrasts(`Pax6_heterozygous_RNA` - `Pax6_wildtype_RNA` , levels=dm)
fit<-lmFit(gse, dm)
fit<-contrasts.fit(fit, cmat)
fit<-eBayes(fit)
cols<-c(
'ID', 'Gene.Symbol', 'ENTREZ_GENE_ID', 'AveExpr',
'logFC', 'P.Value', 'adj.P.Val'
)
deg<-topTable(fit, n=Inf)[, cols]
print(head(deg))
# Join Group Averages on the degList
Gr1<-pData(gse)[pData(gse)$characteristics_ch1 == 'Pax6_wildtype_RNA', 'geo_accession']
Gr2<-pData(gse)[pData(gse)$characteristics_ch1 == 'Pax6_heterozygous_RNA', 'geo_accession']
library(data.table)
ls()
ex<-as.data.frame(exprs(gse))
ex$ID<-row.names(ex)
ex<-melt(ex, id.vars='ID')
head(ex)
ex[..variable %in% Gr1,]
ex<-data.table(ex)
ex[..variable %in% Gr1,]
